name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: 20

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.vscode/**'
      - 'coverage/**'
      - '**.md'
    tags:
      - 'v*.*.*'
  pull_request:
    paths-ignore:
      - '.vscode/**'
      - 'coverage/**'
      - 'docs/**'
      - '**.md'
  workflow_dispatch:

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup NodeJs
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Validate (runs everything)
        run: npm run validate

      - name: Prepare public directory
        if: >
          (github.ref_name == 'mp/coverage2') ||
          (github.event_name == 'pull_request' && github.head_ref == 'mp/coverage2')
        run: |
          mkdir -p ./public/coverage
          cp -r ./coverage/* ./public/coverage/

      - name: Extract coverage and generate badge
        if: >
          (github.ref_name == 'mp/coverage2') ||
          (github.event_name == 'pull_request' && github.head_ref == 'mp/coverage2')
        id: badge
        run: |
          LINES=$(jq '.total.lines.pct' coverage/coverage-summary.json)
          PERCENT=$(printf "%.1f" "$LINES")
          COLOR="red"
          if (( $(echo "$PERCENT >= 90" | bc -l) )); then COLOR="brightgreen";
          elif (( $(echo "$PERCENT >= 80" | bc -l) )); then COLOR="green";
          elif (( $(echo "$PERCENT >= 70" | bc -l) )); then COLOR="yellowgreen";
          elif (( $(echo "$PERCENT >= 60" | bc -l) )); then COLOR="yellow";
          elif (( $(echo "$PERCENT >= 50" | bc -l) )); then COLOR="orange"; fi
          curl -s "https://img.shields.io/badge/coverage-${PERCENT//./%2E}%25-$COLOR.svg?logo=jest" \
            -o ./public/coverage/coverage-badge.svg

      - name: Configure GitHub Pages
        if: >
          (github.ref_name == 'mp/coverage2') ||
          (github.event_name == 'pull_request' && github.head_ref == 'mp/coverage2')
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        if: >
          (github.ref_name == 'mp/coverage2') ||
          (github.event_name == 'pull_request' && github.head_ref == 'mp/coverage2')
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy-site:
    name: Deploy Site
    needs: validate
    runs-on: ubuntu-latest
    if: >
      (github.ref_name == 'mp/coverage2') ||
      (github.event_name == 'pull_request' && github.head_ref == 'mp/coverage2')
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

  changeset:
    name: Changeset
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check changesets
        id: check_changesets
        shell: bash
        run: |
          echo "Checking for changesets..."
          if [ -n "$(find .changeset -name '*.md' ! -name 'README.md')" ]; then
            echo "has_changesets=true" >> $GITHUB_OUTPUT
          else
            echo "No changeset files found."
            echo "has_changesets=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup NodeJs
        if: steps.check_changesets.outputs.has_changesets == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install dependencies
        if: steps.check_changesets.outputs.has_changesets == 'true'
        run: npm ci

      - name: Run Changeset
        if: steps.check_changesets.outputs.has_changesets == 'true'
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.CHANGESETS_TOKEN }}
        with:
          publish: false
